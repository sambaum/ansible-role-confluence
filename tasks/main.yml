---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include release specific variables
  include_vars: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "../vars"
      skip: "yes"
  loop_control:
    loop_var: "loop_var"
  tags: confluence

- name: include release specific tasks
  include_tasks: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "."
      skip: "yes"
  loop_control:
    loop_var: "loop_var"
  tags: confluence

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  with_items:
    - { dest: "/etc/init.d" }
    - { dest: "/etc/systemd/system" }
    - { dest: "/opt/atlassian/confluence", owner: "daemon", group: "daemon" }
    - { dest: "/var/atlassian/application-data/confluence", owner: "daemon", group: "daemon" }
  tags: confluence

- name: unarchive package
  shell: |
    cd /opt/atlassian/confluence
    curl -skL {{ confluence_download_url }} | tar zxf - --strip-components 1
    cd /opt/atlassian/confluence/WEB-INF/lib
    rm -rf *mysql*.jar
    curl -skL {{ mysql_jdbc_download_url }} | tar zxf - --strip-components 1 --wildcards "mysql*/*mysql*.jar"
    cd /opt/atlassian/confluence/WEB-INF/lib
    rm -rf *postgresql*.jar
    curl -skL {{ postgresql_jdbc_download_url }} -O
    chown -Rf daemon:daemon /opt/atlassian/confluence
  args:
    creates: "/opt/atlassian/confluence/bin/start-confluence.sh"
  tags: confluence

- name: unarchive package jdbc
  shell: |
    cd {{ confluence_mysql_jar_dest }}
    rm -rf *mysql*.jar
    curl -skL {{ mysql_jdbc_download_url }} | tar zxf - --strip-components 1 --wildcards "mysql*/*mysql*.jar"
    chown -Rf daemon:daemon /opt/atlassian/confluence
  args:
    creates: "{{ confluence_mysql_jar_dest }}/*mysql*.jar"
  tags: confluence
  notify: restart confluence

- name: copy templates
  template:
    src: "./templates{{ item.dest }}.j2"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  with_items:
    - { dest: "/etc/init.d/confluence", mode: "0755" }
    - { dest: "/etc/systemd/system/confluence.service" }
    - { dest: "/opt/atlassian/confluence/bin/setenv.sh", owner: "daemon", group: "daemon", mode: "0755" }
    - { dest: "/opt/atlassian/confluence/conf/server.xml", owner: "daemon", group: "daemon" }
  register: template_result
  tags: confluence
  notify: restart confluence

- name: systemctl daemon-reload
  systemd:
    name: confluence
    daemon_reload: yes
  when:
    - ansible_service_mgr == 'systemd'
    - template_result is changed
  changed_when: false
  ignore_errors: yes
  tags: confluence

- name: enable service
  service:
    name: confluence
    enabled: yes
#  changed_when: false
#  ignore_errors: yes
  tags: confluence

- name: start confluence
  service:
    name: confluence
    state: started

- name: set transaction-isolation=READ-COMMITTED
  lineinfile:
    path: "{{ confluence_use_mysql_config_file }}"
    regexp: '^transaction-isolation='
    insertafter: '^\[mysqld\]'
    line: 'transaction-isolation=READ-COMMITTED'
  notify: restart mysql
  when: confluence_use_mysql

- name: deploy letsencrypt helper script
  template:
    src: letsencrypt_keystore_helper.sh.j2
    dest: "{{ confluence_letsencrypt_jks_destination }}/letsencrypt_keystore_helper.sh"
    owner: daemon
    group: daemon
    mode: 0744
  when: confluence_letsencrypt_jks_helper_script

- name: deploy letsencrypt helper script cron job
  cron:
    name: letsencrypt helper script
    minute: 0
    hour: 4
    user: root
    job: "{{ confluence_letsencrypt_jks_destination }}/letsencrypt_keystore_helper.sh"
    cron_file: confluence_letsencrypt

- name: run letsencrypt helper script
  command: "{{ confluence_letsencrypt_jks_destination }}/letsencrypt_keystore_helper.sh"

- name: Redirect http to https
  blockinfile:
    path: /opt/atlassian/confluence/confluence/WEB-INF/web.xml
    insertbefore: '^</web-app>'
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    content: |
      <security-constraint>
        <web-resource-collection>
          <web-resource-name>Restricted URLs</web-resource-name>
          <url-pattern>/</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
          <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
      </security-constraint>
  when: confluence_redirect_http_to_https
  notify: restart confluence
